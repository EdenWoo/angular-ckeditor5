/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/**
 * Basic typings for the CKEditor5 elements.
 */
export var CKEditor5;
(function (CKEditor5) {
    /**
     * The CKEditor5 editor constructor.
     * @record
     */
    function EditorConstructor() { }
    CKEditor5.EditorConstructor = EditorConstructor;
    if (false) {
        /**
         * @param {?} sourceElementOrData
         * @param {?=} config
         * @return {?}
         */
        EditorConstructor.prototype.create = function (sourceElementOrData, config) { };
    }
    /**
     * The CKEditor5 editor config.
     * @record
     */
    function Config() { }
    CKEditor5.Config = Config;
    /**
     * The event object passed to CKEditor5 event callbacks.
     *
     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_utils_eventinfo-EventInfo.html
     * @record
     * @template EventName
     */
    function EventInfo() { }
    CKEditor5.EventInfo = EventInfo;
    if (false) {
        /** @type {?} */
        EventInfo.prototype.name;
        /** @type {?} */
        EventInfo.prototype.path;
        /** @type {?} */
        EventInfo.prototype.source;
        /** @type {?|undefined} */
        EventInfo.prototype.return;
        /**
         * @return {?}
         */
        EventInfo.prototype.off = function () { };
        /**
         * @return {?}
         */
        EventInfo.prototype.stop = function () { };
    }
    /**
     * The base Editor class.
     *
     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html
     * @record
     */
    function BaseEditor() { }
    CKEditor5.BaseEditor = BaseEditor;
    if (false) {
        /** @type {?} */
        BaseEditor.prototype.commands;
        /** @type {?} */
        BaseEditor.prototype.config;
        /** @type {?} */
        BaseEditor.prototype.conversion;
        /** @type {?} */
        BaseEditor.prototype.data;
        /** @type {?} */
        BaseEditor.prototype.editing;
        /** @type {?} */
        BaseEditor.prototype.keystrokes;
        /** @type {?} */
        BaseEditor.prototype.locale;
        /** @type {?} */
        BaseEditor.prototype.model;
        /** @type {?} */
        BaseEditor.prototype.plugins;
        /** @type {?} */
        BaseEditor.prototype.state;
        /** @type {?} */
        BaseEditor.prototype.isReadOnly;
        /* Skipping unhandled member: [ property: string ]: any;*/
        /**
         * @param {?} events
         * @return {?}
         */
        BaseEditor.prototype.delegate = function (events) { };
        /**
         * @return {?}
         */
        BaseEditor.prototype.destroy = function () { };
        /**
         * @param {?} commandName
         * @param {...?} params
         * @return {?}
         */
        BaseEditor.prototype.execute = function (commandName, params) { };
        /**
         * @param {?} eventName
         * @param {?=} args
         * @return {?}
         */
        BaseEditor.prototype.fire = function (eventName, args) { };
        /**
         * @param {?} emitter
         * @param {?} eventName
         * @param {?} callback
         * @param {?=} options
         * @return {?}
         */
        BaseEditor.prototype.listenTo = function (emitter, eventName, callback, options) { };
        /**
         * @param {?} eventName
         * @param {?} callback
         * @return {?}
         */
        BaseEditor.prototype.off = function (eventName, callback) { };
        /**
         * @param {?} eventName
         * @param {?} callback
         * @param {?=} options
         * @return {?}
         */
        BaseEditor.prototype.on = function (eventName, callback, options) { };
        /**
         * @param {?} eventName
         * @param {?} callback
         * @param {?=} options
         * @return {?}
         */
        BaseEditor.prototype.once = function (eventName, callback, options) { };
        /**
         * @param {?} emitter
         * @param {?} eventName
         * @param {?} callback
         * @return {?}
         */
        BaseEditor.prototype.stopListening = function (emitter, eventName, callback) { };
        /**
         * @param {...?} args
         * @return {?}
         */
        BaseEditor.prototype.t = function (args) { };
    }
    /**
     * The CKEditor5 DataApi interface.
     *
     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_utils_dataapimixin-DataApi.html.
     * @record
     */
    function DataApi() { }
    CKEditor5.DataApi = DataApi;
    if (false) {
        /**
         * @return {?}
         */
        DataApi.prototype.getData = function () { };
        /**
         * @param {?} data
         * @return {?}
         */
        DataApi.prototype.setData = function (data) { };
    }
    /**
     * A CKEditor5 editor that implements the
     * [DataApi interface](https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_utils_dataapimixin-DataApi.html).
     * E.g. the `ClassicEditor`, `InlineEditor`, etc.
     * @record
     */
    function Editor() { }
    CKEditor5.Editor = Editor;
})(CKEditor5 || (CKEditor5 = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2tlZGl0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2tlZGl0b3IvY2tlZGl0b3I1LWFuZ3VsYXIvIiwic291cmNlcyI6WyJja2VkaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0EsTUFBTSxLQUFXLFNBQVMsQ0ErRXpCO0FBL0VELFdBQWlCLFNBQVM7Ozs7O0lBSXpCLGdDQUVDOzs7Ozs7OztRQURBLGdGQUFzRjs7Ozs7O0lBTXZGLHFCQUVDOzs7Ozs7Ozs7SUFPRCx3QkFRQzs7OztRQVBBLHlCQUF5Qjs7UUFDekIseUJBQXFCOztRQUNyQiwyQkFBcUI7O1FBQ3JCLDJCQUFhOzs7O1FBRWIsMENBQVk7Ozs7UUFDWiwyQ0FBYTs7Ozs7Ozs7SUFRZCx5QkEwQkM7Ozs7UUF6QkEsOEJBQXVCOztRQUN2Qiw0QkFBcUI7O1FBQ3JCLGdDQUF5Qjs7UUFDekIsMEJBQW1COztRQUNuQiw2QkFBc0I7O1FBQ3RCLGdDQUF5Qjs7UUFDekIsNEJBQXFCOztRQUNyQiwyQkFBb0I7O1FBQ3BCLDZCQUFzQjs7UUFDdEIsMkJBQXVEOztRQUV2RCxnQ0FBb0I7Ozs7OztRQUVwQixzREFBa0M7Ozs7UUFDbEMsK0NBQXlCOzs7Ozs7UUFDekIsa0VBQXNEOzs7Ozs7UUFDdEQsMkRBQTJDOzs7Ozs7OztRQUMzQyxxRkFBcUY7Ozs7OztRQUNyRiw4REFBbUQ7Ozs7Ozs7UUFDbkQsc0VBQWlFOzs7Ozs7O1FBQ2pFLHdFQUFtRTs7Ozs7OztRQUNuRSxpRkFBMkU7Ozs7O1FBQzNFLDZDQUEwQjs7Ozs7Ozs7SUFVM0Isc0JBR0M7Ozs7OztRQUZBLDRDQUFrQjs7Ozs7UUFDbEIsZ0RBQThCOzs7Ozs7OztJQVEvQixxQkFBc0Q7O0FBQ3ZELENBQUMsRUEvRWdCLFNBQVMsS0FBVCxTQUFTLFFBK0V6QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmFzaWMgdHlwaW5ncyBmb3IgdGhlIENLRWRpdG9yNSBlbGVtZW50cy5cbiAqL1xuZXhwb3J0IG5hbWVzcGFjZSBDS0VkaXRvcjUge1xuXHQvKipcblx0ICogVGhlIENLRWRpdG9yNSBlZGl0b3IgY29uc3RydWN0b3IuXG5cdCAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEVkaXRvckNvbnN0cnVjdG9yIHtcblx0XHRjcmVhdGUoIHNvdXJjZUVsZW1lbnRPckRhdGE6IEhUTUxFbGVtZW50IHwgc3RyaW5nLCBjb25maWc/OiBDb25maWcgKTogUHJvbWlzZTxFZGl0b3I+O1xuXHR9XG5cblx0LyoqXG5cdCAqIFRoZSBDS0VkaXRvcjUgZWRpdG9yIGNvbmZpZy5cblx0ICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnIHtcblx0XHRbIGtleTogc3RyaW5nIF06IGFueTtcblx0fVxuXG5cdC8qKlxuXHQgKiBUaGUgZXZlbnQgb2JqZWN0IHBhc3NlZCB0byBDS0VkaXRvcjUgZXZlbnQgY2FsbGJhY2tzLlxuXHQgKlxuXHQgKiBTZWUgaHR0cHM6Ly9ja2VkaXRvci5jb20vZG9jcy9ja2VkaXRvcjUvbGF0ZXN0L2FwaS9tb2R1bGVfdXRpbHNfZXZlbnRpbmZvLUV2ZW50SW5mby5odG1sXG5cdCAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEV2ZW50SW5mbzxFdmVudE5hbWUgZXh0ZW5kcyBzdHJpbmc+IHtcblx0XHRyZWFkb25seSBuYW1lOiBFdmVudE5hbWU7XG5cdFx0cmVhZG9ubHkgcGF0aDogYW55W107XG5cdFx0cmVhZG9ubHkgc291cmNlOiBhbnk7XG5cdFx0cmV0dXJuPzogYW55O1xuXG5cdFx0b2ZmKCk6IHZvaWQ7XG5cdFx0c3RvcCgpOiB2b2lkO1xuXHR9XG5cblx0LyoqXG5cdCAqIFRoZSBiYXNlIEVkaXRvciBjbGFzcy5cblx0ICpcblx0ICogU2VlIGh0dHBzOi8vY2tlZGl0b3IuY29tL2RvY3MvY2tlZGl0b3I1L2xhdGVzdC9hcGkvbW9kdWxlX2NvcmVfZWRpdG9yX2VkaXRvci1FZGl0b3IuaHRtbFxuXHQgKi9cblx0ZXhwb3J0IGludGVyZmFjZSBCYXNlRWRpdG9yIHtcblx0XHRyZWFkb25seSBjb21tYW5kczogYW55O1xuXHRcdHJlYWRvbmx5IGNvbmZpZzogYW55O1xuXHRcdHJlYWRvbmx5IGNvbnZlcnNpb246IGFueTtcblx0XHRyZWFkb25seSBkYXRhOiBhbnk7XG5cdFx0cmVhZG9ubHkgZWRpdGluZzogYW55O1xuXHRcdHJlYWRvbmx5IGtleXN0cm9rZXM6IGFueTtcblx0XHRyZWFkb25seSBsb2NhbGU6IGFueTtcblx0XHRyZWFkb25seSBtb2RlbDogYW55O1xuXHRcdHJlYWRvbmx5IHBsdWdpbnM6IGFueTtcblx0XHRyZWFkb25seSBzdGF0ZTogJ2luaXRpYWxpemluZycgfCAncmVhZHknIHwgJ2Rlc3Ryb3llZCc7XG5cblx0XHRpc1JlYWRPbmx5OiBib29sZWFuO1xuXG5cdFx0ZGVsZWdhdGUoIGV2ZW50czogc3RyaW5nW10gKTogYW55O1xuXHRcdGRlc3Ryb3koKTogUHJvbWlzZTx2b2lkPjtcblx0XHRleGVjdXRlKCBjb21tYW5kTmFtZTogc3RyaW5nLCAuLi5wYXJhbXM6IGFueVtdICk6IGFueTtcblx0XHRmaXJlKCBldmVudE5hbWU6IHN0cmluZywgYXJncz86IGFueSApOiBhbnk7XG5cdFx0bGlzdGVuVG8oIGVtaXR0ZXI6IGFueSwgZXZlbnROYW1lOiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbiwgb3B0aW9ucz86IGFueSApOiB2b2lkO1xuXHRcdG9mZiggZXZlbnROYW1lOiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbiApOiB2b2lkO1xuXHRcdG9uKCBldmVudE5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uLCBvcHRpb25zPzogYW55ICk6IHZvaWQ7XG5cdFx0b25jZSggZXZlbnROYW1lOiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbiwgb3B0aW9ucz86IGFueSApOiB2b2lkO1xuXHRcdHN0b3BMaXN0ZW5pbmcoIGVtaXR0ZXI6IGFueSwgZXZlbnROYW1lOiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbiApOiB2b2lkO1xuXHRcdHQoIC4uLmFyZ3M6IGFueVtdICk6IHZvaWQ7XG5cblx0XHRbIHByb3BlcnR5OiBzdHJpbmcgXTogYW55O1xuXHR9XG5cblx0LyoqXG5cdCAqIFRoZSBDS0VkaXRvcjUgRGF0YUFwaSBpbnRlcmZhY2UuXG5cdCAqXG5cdCAqIFNlZSBodHRwczovL2NrZWRpdG9yLmNvbS9kb2NzL2NrZWRpdG9yNS9sYXRlc3QvYXBpL21vZHVsZV9jb3JlX2VkaXRvcl91dGlsc19kYXRhYXBpbWl4aW4tRGF0YUFwaS5odG1sLlxuXHQgKi9cblx0ZXhwb3J0IGludGVyZmFjZSBEYXRhQXBpIHtcblx0XHRnZXREYXRhKCk6IHN0cmluZztcblx0XHRzZXREYXRhKCBkYXRhOiBzdHJpbmcgKTogdm9pZDtcblx0fVxuXG5cdC8qKlxuXHQgKiBBIENLRWRpdG9yNSBlZGl0b3IgdGhhdCBpbXBsZW1lbnRzIHRoZVxuXHQgKiBbRGF0YUFwaSBpbnRlcmZhY2VdKGh0dHBzOi8vY2tlZGl0b3IuY29tL2RvY3MvY2tlZGl0b3I1L2xhdGVzdC9hcGkvbW9kdWxlX2NvcmVfZWRpdG9yX3V0aWxzX2RhdGFhcGltaXhpbi1EYXRhQXBpLmh0bWwpLlxuXHQgKiBFLmcuIHRoZSBgQ2xhc3NpY0VkaXRvcmAsIGBJbmxpbmVFZGl0b3JgLCBldGMuXG5cdCAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEVkaXRvciBleHRlbmRzIEJhc2VFZGl0b3IsIERhdGFBcGkge31cbn1cbiJdfQ==