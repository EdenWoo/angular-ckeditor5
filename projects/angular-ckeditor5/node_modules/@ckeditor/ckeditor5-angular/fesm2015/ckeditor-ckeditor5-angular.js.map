{"version":3,"file":"ckeditor-ckeditor5-angular.js.map","sources":["ng://@ckeditor/ckeditor5-angular/ckeditor.component.ts","ng://@ckeditor/ckeditor5-angular/ckeditor.module.ts"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport {\n\tComponent,\n\tInput,\n\tOutput,\n\tNgZone,\n\tEventEmitter,\n\tforwardRef,\n\tAfterViewInit, OnDestroy,\n\tElementRef\n} from '@angular/core';\n\nimport {\n\tControlValueAccessor,\n\tNG_VALUE_ACCESSOR\n} from '@angular/forms';\n\nimport { CKEditor5 } from './ckeditor';\n\n@Component( {\n\tselector: 'ckeditor',\n\ttemplate: '<ng-template></ng-template>',\n\n\t// Integration with @angular/forms.\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef( () => CKEditorComponent ),\n\t\t\tmulti: true,\n\t\t}\n\t]\n} )\nexport class CKEditorComponent implements AfterViewInit, OnDestroy, ControlValueAccessor {\n\t/**\n\t * The reference to the DOM element created by the component.\n\t */\n\tprivate elementRef!: ElementRef<HTMLElement>;\n\n\t/**\n\t * The constructor of the editor to be used for the instance of the component.\n\t * It can be e.g. the `ClassicEditorBuild`, `InlineEditorBuild` or some custom editor.\n\t */\n\t@Input() editor?: CKEditor5.EditorConstructor;\n\n\t/**\n\t * The configuration of the editor.\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editorconfig-EditorConfig.html\n\t * to learn more.\n\t */\n\t@Input() config?: CKEditor5.Config;\n\n\t/**\n\t * The initial data of the editor. Useful when not using the ngModel.\n\t * See https://angular.io/api/forms/NgModel to learn more.\n\t */\n\t@Input() data = '';\n\n\t/**\n\t * Tag name of the editor component.\n\t *\n\t * The default tag is 'div'.\n\t */\n\t@Input() tagName = 'div';\n\n\t/**\n\t * When set `true`, the editor becomes read-only.\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#member-isReadOnly\n\t * to learn more.\n\t */\n\t@Input() set disabled( isDisabled: boolean ) {\n\t\tthis.setDisabledState( isDisabled );\n\t}\n\n\tget disabled() {\n\t\tif ( this.editorInstance ) {\n\t\t\treturn this.editorInstance.isReadOnly;\n\t\t}\n\n\t\treturn this.initialIsDisabled;\n\t}\n\n\t/**\n\t * Fires when the editor is ready. It corresponds with the `editor#ready`\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#event-ready\n\t * event.\n\t */\n\t@Output() ready = new EventEmitter<CKEditor5.Editor>();\n\n\t/**\n\t * Fires when the content of the editor has changed. It corresponds with the `editor.model.document#change`\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_model_document-Document.html#event-change\n\t * event.\n\t */\n\t@Output() change: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\n\n\t/**\n\t * Fires when the editing view of the editor is blurred. It corresponds with the `editor.editing.view.document#blur`\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:blur\n\t * event.\n\t */\n\t@Output() blur: EventEmitter<BlurEvent> = new EventEmitter<BlurEvent>();\n\n\t/**\n\t * Fires when the editing view of the editor is focused. It corresponds with the `editor.editing.view.document#focus`\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:focus\n\t * event.\n\t */\n\t@Output() focus: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n\t/**\n\t * The instance of the editor created by this component.\n\t */\n\tpublic editorInstance: CKEditor5.Editor | null = null;\n\n\t/**\n\t * If the component is readâonly before the editor instance is created, it remembers that state,\n\t * so the editor can become readâonly once it is ready.\n\t */\n\tprivate initialIsDisabled = false;\n\n\t/**\n\t * An instance of https://angular.io/api/core/NgZone to allow the interaction with the editor\n\t * withing the Angular event loop.\n\t */\n\tprivate ngZone: NgZone;\n\n\t/**\n\t * A callback executed when the content of the editor changes. Part of the\n\t * `ControlValueAccessor` (https://angular.io/api/forms/ControlValueAccessor) interface.\n\t *\n\t * Note: Unset unless the component uses the `ngModel`.\n\t */\n\tprivate cvaOnChange?: ( data: string ) => void;\n\n\t/**\n\t * A callback executed when the editor has been blurred. Part of the\n\t * `ControlValueAccessor` (https://angular.io/api/forms/ControlValueAccessor) interface.\n\t *\n\t * Note: Unset unless the component uses the `ngModel`.\n\t */\n\tprivate cvaOnTouched?: () => void;\n\n\tconstructor( elementRef: ElementRef, ngZone: NgZone ) {\n\t\tthis.ngZone = ngZone;\n\t\tthis.elementRef = elementRef;\n\t}\n\n\t// Implementing the AfterViewInit interface.\n\tngAfterViewInit() {\n\t\tthis.ngZone.runOutsideAngular( () => {\n\t\t\tthis.createEditor();\n\t\t} );\n\t}\n\n\t// Implementing the OnDestroy interface.\n\tngOnDestroy() {\n\t\tif ( this.editorInstance ) {\n\t\t\tthis.editorInstance.destroy();\n\t\t\tthis.editorInstance = null;\n\t\t}\n\t}\n\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\twriteValue( value: string | null ): void {\n\t\t// This method is called with the `null` value when the form resets.\n\t\t// A component's responsibility is to restore to the initial state.\n\t\tif ( value === null ) {\n\t\t\tvalue = '';\n\t\t}\n\n\t\t// If already initialized.\n\t\tif ( this.editorInstance ) {\n\t\t\tthis.editorInstance.setData( value );\n\t\t}\n\t\t// If not, wait for it to be ready; store the data.\n\t\telse {\n\t\t\tthis.data = value;\n\t\t}\n\t}\n\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\tregisterOnChange( callback: ( data: string ) => void ): void {\n\t\tthis.cvaOnChange = callback;\n\t}\n\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\tregisterOnTouched( callback: () => void ): void {\n\t\tthis.cvaOnTouched = callback;\n\t}\n\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\tsetDisabledState( isDisabled: boolean ): void {\n\t\t// If already initialized\n\t\tif ( this.editorInstance ) {\n\t\t\tthis.editorInstance.isReadOnly = isDisabled;\n\t\t}\n\t\t// If not, wait for it to be ready; store the state.\n\t\telse {\n\t\t\tthis.initialIsDisabled = isDisabled;\n\t\t}\n\t}\n\n\t/**\n\t * Creates the editor instance, sets initial editor data,\n\t * then integrates the editor with the Angular component.\n\t */\n\tprivate createEditor(): Promise<any> {\n\t\tconst element = document.createElement( this.tagName );\n\n\t\tthis.elementRef.nativeElement.appendChild( element );\n\n\t\treturn this.editor!.create( element, this.config )\n\t\t\t.then( editor => {\n\t\t\t\tthis.editorInstance = editor;\n\n\t\t\t\teditor.setData( this.data );\n\n\t\t\t\tif ( this.initialIsDisabled ) {\n\t\t\t\t\teditor.isReadOnly = this.initialIsDisabled;\n\t\t\t\t}\n\n\t\t\t\tthis.ngZone.run( () => {\n\t\t\t\t\tthis.ready.emit( editor );\n\t\t\t\t} );\n\n\t\t\t\tthis.setUpEditorEvents( editor );\n\t\t\t} )\n\t\t\t.catch( ( err: Error ) => {\n\t\t\t\tconsole.error( err.stack );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Integrates the editor with the component by attaching related event listeners.\n\t */\n\tprivate setUpEditorEvents( editor: CKEditor5.Editor ): void {\n\t\tconst modelDocument = editor.model.document;\n\t\tconst viewDocument = editor.editing.view.document;\n\n\t\tmodelDocument.on( 'change:data', ( evt: CKEditor5.EventInfo<'change:data'> ) => {\n\t\t\tconst data = editor.getData();\n\n\t\t\tthis.ngZone.run( () => {\n\t\t\t\tif ( this.cvaOnChange ) {\n\t\t\t\t\tthis.cvaOnChange( data );\n\t\t\t\t}\n\n\t\t\t\tthis.change.emit( { event: evt, editor } );\n\t\t\t} );\n\t\t} );\n\n\t\tviewDocument.on( 'focus', ( evt: CKEditor5.EventInfo<'focus'> ) => {\n\t\t\tthis.ngZone.run( () => {\n\t\t\t\tthis.focus.emit( { event: evt, editor } );\n\t\t\t} );\n\t\t} );\n\n\t\tviewDocument.on( 'blur', ( evt: CKEditor5.EventInfo<'blur'> ) => {\n\t\t\tthis.ngZone.run( () => {\n\t\t\t\tif ( this.cvaOnTouched ) {\n\t\t\t\t\tthis.cvaOnTouched();\n\t\t\t\t}\n\n\t\t\t\tthis.blur.emit( { event: evt, editor } );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nexport interface BlurEvent {\n\tevent: CKEditor5.EventInfo<'blur'>;\n\teditor: CKEditor5.Editor;\n}\n\nexport interface FocusEvent {\n\tevent: CKEditor5.EventInfo<'focus'>;\n\teditor: CKEditor5.Editor;\n}\n\nexport interface ChangeEvent {\n\tevent: CKEditor5.EventInfo<'change:data'>;\n\teditor: CKEditor5.Editor;\n}\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CKEditorComponent } from './ckeditor.component';\n\n@NgModule( {\n\timports: [ FormsModule, CommonModule ],\n\tdeclarations: [ CKEditorComponent ],\n\texports: [ CKEditorComponent ]\n} )\nexport class CKEditorModule {}\n"],"names":[],"mappings":"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"}
